[{"path":"https://posit-dev.github.io/r-shinylive/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 shinylive authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://posit-dev.github.io/r-shinylive/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Barret Schloerke. Author, maintainer. Winston Chang. Author. George Stagg. Contributor. . Copyright holder, funder.","code":""},{"path":"https://posit-dev.github.io/r-shinylive/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schloerke B, Chang W (2023). shinylive: Run Shiny applications browser. https://posit-dev.github.io/r-shinylive/, https://github.com/posit-dev/r-shinylive.","code":"@Manual{,   title = {shinylive: Run Shiny applications in the browser},   author = {Barret Schloerke and Winston Chang},   year = {2023},   note = {https://posit-dev.github.io/r-shinylive/, https://github.com/posit-dev/r-shinylive}, }"},{"path":"https://posit-dev.github.io/r-shinylive/index.html","id":"shinylive","dir":"","previous_headings":"","what":"Run Shiny applications in the browser","title":"Run Shiny applications in the browser","text":"repository contains R package exporting Shiny applications Shinylive applications. repository https://github.com/posit-dev/shinylive repository. repository used generate Shinylive assets distribution, bundle containing HTML, JavaScript, CSS, wasm files. R package repository downloads assets uses create Shinylive applications. Twin shinylive python package: https://github.com/posit-dev/py-shinylive","code":""},{"path":"https://posit-dev.github.io/r-shinylive/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Run Shiny applications in the browser","text":"can install development version shinylive GitHub via:","code":"# install.packages(\"pak\") pak::pak(\"posit-dev/r-shinylive\")"},{"path":"https://posit-dev.github.io/r-shinylive/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Run Shiny applications in the browser","text":"(Optional) Create basic shiny application new directory myapp/: Shiny application myapp/ like turn Shinylive app site/: can preview application running web server visiting browser (example using development version httpuv): point, can deploy site/ directory static web hosting service.","code":"# Copy \"Hello World\" from `{shiny}` system.file(\"examples\", \"01_hello\", package=\"shiny\") |>     fs::dir_copy(\"myapp\", overwrite = TRUE) shinylive::export(\"myapp\", \"site\") # install.packages(\"pak\") pak::pak(\"rstudio/httpuv\") httpuv::runStaticServer(\"site/\", port=8008)"},{"path":"https://posit-dev.github.io/r-shinylive/index.html","id":"multiple-applications","dir":"","previous_headings":"Usage","what":"Multiple applications","title":"Run Shiny applications in the browser","text":"multiple applications want put site, can export subdirectories site, can share Shinylive assets. can --subdir option:","code":"shinylive::export(\"myapp1\", \"site\", subdir = \"app1\") shinylive::export(\"myapp2\", \"site\", subdir = \"app2\")"},{"path":"https://posit-dev.github.io/r-shinylive/index.html","id":"shinylive-asset-management","dir":"","previous_headings":"","what":"Shinylive asset management","title":"Run Shiny applications in the browser","text":"version Shinylive R package associated particular version Shinylive web assets. (See releases .) see version R package , version web assets associated , simply run shinylive::assets_info() R session. also show asset versions already installed locally: web assets downloaded cached first time run shinylive::export(). , can run shinylive::assets_download() fetch manually. can remove old versions shinylive::assets_cleanup(). remove versions except one Python package wants use: remove specific version, use shinylive::assets_remove():","code":"shinylive::assets_info() #> shinylive R package version:  0.0.1 #> shinylive web assets version: 0.1.7 #> #> Local cached shinylive asset dir: #>     /Users/username/Library/Caches/shinylive #> #> Installed assets: #>     /Users/username/Library/Caches/shinylive/0.1.7 #>     /Users/username/Library/Caches/shinylive/0.1.6 shinylive::assets_download(\"0.1.5\") #> Downloading shinylive v0.1.5... #> Unzipping to /Users/username/Library/Caches/shinylive/ shinylive::assets_cleanup() #> Keeping version 0.1.7 #> Removing /Users/username/Library/Caches/shinylive/0.1.6 #> Removing /Users/username/Library/Caches/shinylive/0.1.5 shinylive::assets_remove(\"0.1.5\") #> Removing /Users/username/Library/Caches/shinylive/0.1.5"},{"path":"https://posit-dev.github.io/r-shinylive/index.html","id":"known-limitations","dir":"","previous_headings":"","what":"Known limitations","title":"Run Shiny applications in the browser","text":"Details: first shinylive code block initialized. Currently posit-dev/shinylive-py know shinylive-r code blocks. Details: (naturally) fixed next release posit-dev/shinylive-py. current R common files contain files python’s pyodide pyright. removed future make smaller bundles / faster loading.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/r-shinylive/index.html","id":"setup---shinylive-assets","dir":"","previous_headings":"Development","what":"Setup - shinylive assets","title":"Run Shiny applications in the browser","text":"Works latest GitHub version posit-dev/shinylive (>= v0.2.0). linking shinylive assets asset cache folder, must first build shiny live assets: link assets (using shinylive R package) asset cache folder changes assets automatically cached shinylive assets:","code":"## In your shinylive assets repo # cd PATH/TO/posit-dev/shinylive  # Generate the shiny live assets make submodules all # Link to your local shinylive repo shinylive::assets_install_link(\"PATH/TO/posit-dev/shinylive\")"},{"path":"https://posit-dev.github.io/r-shinylive/index.html","id":"setup---quarto","dir":"","previous_headings":"Development","what":"Setup - quarto","title":"Run Shiny applications in the browser","text":"quarto project, call following lines terminal install updated shinylive quarto extension: default, extension used installed shinylive R package. use local shinylive R package, run following R session update quarto extension locally:","code":"# Go to the quarto project directory cd local/quarto  # Install the updated shinylive quarto extension quarto add quarto-ext/shinylive if (!require(\"pkgload\")) install.packages(\"pkgload\")  shinylive_lua <- file.path(\"local\", \"quarto\", \"_extensions\", \"quarto-ext\", \"shinylive\", \"shinylive.lua\") shinylive_lua |>     brio::read_file() |>     sub(         pattern = \"shinylive::quarto_ext()\",         replacement = \"pkgload::load_all('../../', quiet = TRUE); shinylive::quarto_ext()\",         fixed = TRUE     ) |>     brio::write_file(shinylive_lua)"},{"path":"https://posit-dev.github.io/r-shinylive/index.html","id":"execute---export","dir":"","previous_headings":"Development","what":"Execute - export()","title":"Run Shiny applications in the browser","text":"Export local app directory run :","code":"pkgload::load_all() # Delete prior unlink(\"local/shiny-apps-out/\") export(\"local/shiny-apps/simple-r\", \"local/shiny-apps-out\") #> Run the following in an R session to serve the app: #>   httpuv::runStaticServer(\"local/shiny-apps-out\", port=8008)  # Host the local directory httpuv::runStaticServer(\"local/shiny-apps-out\", port=8008)"},{"path":"https://posit-dev.github.io/r-shinylive/reference/assets.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage shinylive assets — assets_download","title":"Manage shinylive assets — assets_download","text":"Helper methods managing shinylive assets.","code":""},{"path":"https://posit-dev.github.io/r-shinylive/reference/assets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage shinylive assets — assets_download","text":"","code":"assets_download(   version = assets_version(),   ...,   dir = assets_cache_dir(),   url = assets_bundle_url(version) )  assets_ensure(   version = assets_version(),   ...,   dir = assets_cache_dir(),   url = assets_bundle_url(version) )  assets_cleanup(..., dir = assets_cache_dir())  assets_remove(versions, ..., dir = assets_cache_dir())  assets_info()  assets_version()"},{"path":"https://posit-dev.github.io/r-shinylive/reference/assets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage shinylive assets — assets_download","text":"version version assets download. ... Ignored. dir asset cache directory. Unless testing, default behavior used. url URL download assets . Unless testing, default behavior used. versions assets versions remove.","code":""},{"path":"https://posit-dev.github.io/r-shinylive/reference/assets.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Manage shinylive assets — assets_download","text":"assets_download(): Downloads shinylive assets bundle GitHub extracts specified directory. bundle always downloaded GitHub, even already exists cache directory (dir=). assets_ensure(): Ensures local copy shinylive installed. local copy shinylive installed, downloaded installed. local copy shinylive installed, path returned. assets_cleanup(): Removes local copies shinylive web assets, except one used current version shinylive. assets_remove(): Removes local copies shinylive web assets. assets_info(): Prints information local shinylive assets installed. assets_version(): Returns version currently supported Shinylive assets version.","code":""},{"path":"https://posit-dev.github.io/r-shinylive/reference/export.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a Shiny app to a directory — export","title":"Export a Shiny app to a directory — export","text":"function exports Shiny app directory, can served using httpuv::runStaticServer().","code":""},{"path":"https://posit-dev.github.io/r-shinylive/reference/export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a Shiny app to a directory — export","text":"","code":"export(appdir, destdir, ..., subdir = \"\", verbose = is_interactive())"},{"path":"https://posit-dev.github.io/r-shinylive/reference/export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a Shiny app to a directory — export","text":"appdir Directory containing application. destdir Destination directory. ... Ignored subdir Subdirectory destdir write app . verbose Print verbose output. Defaults TRUE running interactively.","code":""},{"path":"https://posit-dev.github.io/r-shinylive/reference/export.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export a Shiny app to a directory — export","text":"","code":"if (FALSE) { app_dir <- system.file(\"examples\", \"01_hello\", package=\"shiny\") out_dir <- tempfile(\"shinylive-export\")  # Export the app to a directory export(app_dir, out_dir) #> Run the following in an R session to serve the app: #>   httpuv::runStaticServer(<OUT_DIR>, port=8008)  # Serve the exported directory httpuv::runStaticServer(out_dir, port=8008) }"},{"path":"https://posit-dev.github.io/r-shinylive/reference/install.html","id":null,"dir":"Reference","previous_headings":"","what":"Install shinylive assets from from a local directory — assets_install_copy","title":"Install shinylive assets from from a local directory — assets_install_copy","text":"Helper methods testing updates shinylive assets.","code":""},{"path":"https://posit-dev.github.io/r-shinylive/reference/install.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install shinylive assets from from a local directory — assets_install_copy","text":"","code":"assets_install_copy(   assets_repo_dir,   ...,   dir = assets_cache_dir(),   version = package_json_version(assets_repo_dir) )  assets_install_link(   assets_repo_dir,   ...,   dir = assets_cache_dir(),   version = package_json_version(assets_repo_dir) )"},{"path":"https://posit-dev.github.io/r-shinylive/reference/install.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install shinylive assets from from a local directory — assets_install_copy","text":"assets_repo_dir local repository directory shinylive assets (e.g. posit-dev/shinylive) ... Ignored. dir asset cache directory. Unless testing, default behavior used. version version assets installed.","code":""},{"path":"https://posit-dev.github.io/r-shinylive/reference/install.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Install shinylive assets from from a local directory — assets_install_copy","text":"assets_install_copy(): Copies shinylive assets local shinylive repository (e.g. posit-dev/shinylive). must repeated change assets. assets_install_link(): Creates symlink local shinylive assets cached assets directory. first installation, assets source due symlink.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/r-shinylive/news/index.html","id":"shinylive-010","dir":"Changelog","previous_headings":"","what":"shinylive 0.1.0","title":"shinylive 0.1.0","text":"Initial CRAN submission.","code":""}]
